name: CD 

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

jobs:
  init:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: goldenowl-testapp
      ECR_REGISTRY: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION}}.amazonaws.com
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}
    steps:
      - name: Checkout repository         
        uses: actions/checkout@v4

      - name: Download version.txt artifact and read version
        id: read_version
        uses: actions/download-artifact@v3
        with:
          name: version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Save SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem
  
      - name: Deploy Docker image to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i "ec2_key.pem" ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << EOF
            aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            sudo docker pull ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:1.0.0.12572319270
            sudo docker run -d --name ${{ env.IMAGE_NAME }} -p 3000:3000 ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:1.0.0.12572319270
          EOF