name: CI

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

jobs:
  tests:
    runs-on: ubuntu-latest      
    steps:       
      - name: Checkout repository         
        uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest      
    env:
      IMAGE_NAME: goldenowl-testapp
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    steps:       
      - name: Checkout repository         
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
    
      - name: Create version.txt
        run: |
          export PACKAGE_JSON_VERSION=$(cat src/package.json | jq -r .version)
          export VERSION=$PACKAGE_JSON_VERSION.${GITHUB_RUN_ID}
          echo $VERSION > version.txt
          echo $VERSION
      
      - name: Upload version.txt as artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          export VERSION=$(cat version.txt)
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$VERSION ./src
          docker push $ECR_REGISTRY/$IMAGE_NAME:$VERSION
          echo "image=$ECR_REGISTRY/$IMAGE_NAME:$VERSION" >>$GITHUB_OUTPUT
